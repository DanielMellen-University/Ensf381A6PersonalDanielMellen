{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/GitHub/assignment-06-lotion-DanielMellen-University/src/App.js\",\n  _s = $RefreshSig$();\n/*function App() {\n  return <h1>Lotion</h1>;\n}\n\nexport default App;\n*/\n\nimport { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"./index.css\";\nimport Sidebar from \"./bar\";\nimport Header from \"./Header\";\nimport Mainbar from \"./Mainbar\";\n\n/* \n\nconst App = () => {\n  const [notes, setNotes] = useState(() => {\n    const storedNotes = localStorage.getItem(\"notes\");\n    return storedNotes ? JSON.parse(storedNotes) : [];\n  });\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const dateOptions = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  const date = new Intl.DateTimeFormat(\"en-US\", dateOptions).format(new Date());\n\n  return (\n    <div>\n      { App content goes here }\n      </div>\n      );\n    };\n    \n\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState(localStorage.notes ? JSON.parse(localStorage.notes) : []);\n  const [activeNote, setActiveNote] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  const date = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-CA\", date);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now()\n    };\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  /* Save on refresh */\n\n  const onUpdateNote = updatedNote => {\n    const updatedNotesArr = notes.map(note => {\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesArr);\n  };\n  function getActiveNote() {\n    for (let note of notes) {\n      if (note.id === activeNote) {\n        return note;\n      }\n    }\n  }\n  function onDeleteNote(noteId) {\n    const answer = window.confirm(\"Are you sure you want to delete?\");\n    if (answer) {\n      const filteredNotes = notes.filter(function (note) {\n        return note.id !== noteId;\n      });\n      setNotes(filteredNotes);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        onAddNote: onAddNote,\n        onDeleteNote: onDeleteNote,\n        activeNote: activeNote,\n        setActiveNote: setActiveNote,\n        notes: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Mainbar, {\n        onUpdateNote: onUpdateNote,\n        formatDate: formatDate,\n        activeNote: getActiveNote(),\n        onDeleteNote: onDeleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lYbwunTc6vlh1N8X9eZy8GMfiNY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","uuid","Sidebar","Header","Mainbar","jsxDEV","_jsxDEV","App","_s","notes","setNotes","localStorage","JSON","parse","activeNote","setActiveNote","setItem","stringify","date","year","month","day","hour","minute","formatDate","when","formatted","Date","toLocaleString","onAddNote","newNote","id","title","body","lastModified","now","onUpdateNote","updatedNote","updatedNotesArr","map","note","getActiveNote","onDeleteNote","noteId","answer","window","confirm","filteredNotes","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/daniel/Documents/GitHub/assignment-06-lotion-DanielMellen-University/src/App.js"],"sourcesContent":["/*function App() {\n  return <h1>Lotion</h1>;\n}\n\nexport default App;\n*/\n\nimport { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"./index.css\";\n\n\nimport Sidebar from \"./bar\";\nimport Header from \"./Header\";\nimport Mainbar from \"./Mainbar\";\n\n/* \n\nconst App = () => {\n  const [notes, setNotes] = useState(() => {\n    const storedNotes = localStorage.getItem(\"notes\");\n    return storedNotes ? JSON.parse(storedNotes) : [];\n  });\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const dateOptions = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n  const date = new Intl.DateTimeFormat(\"en-US\", dateOptions).format(new Date());\n\n  return (\n    <div>\n      { App content goes here }\n      </div>\n      );\n    };\n    \n\n*/\n\n\nfunction App() {\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n  const [activeNote, setActiveNote] = useState(false);\n\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n\n  const date = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n\n\n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-CA\", date);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now(),\n    };\n\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n\n\n\n/* Save on refresh */\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArr = notes.map((note) => {\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n      return note;\n    });\n\n\n    setNotes(updatedNotesArr);\n  };\n\n\n  function getActiveNote() {\n    for (let note of notes) {\n      if (note.id === activeNote) {\n        return note;\n      }\n    }\n  }\n\n\n  function onDeleteNote(noteId) {\n    const answer = window.confirm(\"Are you sure you want to delete?\");\n    if (answer) {\n      const filteredNotes = notes.filter(function (note) {\n        return note.id !== noteId;\n      });\n      setNotes(filteredNotes);\n    }\n  }\n  \n\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div id=\"container\">\n\n\n        <Sidebar\n          onAddNote={onAddNote}\n          onDeleteNote={onDeleteNote}\n          activeNote={activeNote}\n          setActiveNote={setActiveNote}\n          notes={notes}\n        />\n\n\n\n        <Mainbar\n          onUpdateNote={onUpdateNote}\n          formatDate={formatDate}\n          activeNote={getActiveNote()}\n          onDeleteNote={onDeleteNote}\n        />\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}