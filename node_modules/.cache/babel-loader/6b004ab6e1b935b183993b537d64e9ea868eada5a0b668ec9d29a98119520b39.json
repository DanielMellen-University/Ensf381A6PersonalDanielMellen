{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/GitHub/assignment-06-lotion-DanielMellen-University/src/Mainbar.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = _ref => {\n  _s();\n  let {\n    activeNote,\n    onUpdateNote,\n    onDeleteNote,\n    formatDate\n  } = _ref;\n  const quill = useRef();\n  function onSaveNote(field, value) {\n    onUpdateNote(Object.assign({}, activeNote, {\n      [field]: value,\n      lastModified: Date.now()\n    }));\n  }\n  function onEditField(field, value) {\n    const newNote = Object.assign({}, activeNote, {\n      [field]: value,\n      lastModified: Date.now()\n    });\n    onUpdateNote(newNote);\n  }\n\n  //Get the current time from web browser\n  function getCurrentDateTime() {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    const timezoneOffset = now.getTimezoneOffset() / -60;\n    const timezoneOffsetFormatted = String(timezoneOffset).padStart(2, \"0\");\n    const datetime = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}-${timezoneOffsetFormatted}:00`;\n    return datetime;\n  }\n  //Debug\n  console.log(getCurrentDateTime());\n  if (!activeNote) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-active-note\",\n    children: \"Select an existing note or create a new one \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-main-note-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mainbar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"mainbar-title\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"mainbar-title-input\",\n            value: activeNote.title,\n            onChange: e => {\n              onEditField(\"title\", e.target.value);\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"mainbar-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"save_button\",\n            onClick: () => onSaveNote(\"body\", quill.current.getEditor().getText()),\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"delete_button\",\n            onClick: e => onDeleteNote(activeNote.id),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"date\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          id: \"date\",\n          value: new Date(activeNote.lastModified).toISOString().slice(0, -8),\n          onChange: e => {\n            const newDate = new Date(e.target.value);\n            const timestamp = newDate.getTime();\n            onEditField(\"lastModified\", timestamp);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mainbar-content\",\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          ref: quill,\n          theme: \"snow\",\n          value: activeNote.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"FlphuJKkhdrux8XGc1J5b56P2Is=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useRef","useState","ReactQuill","jsxDEV","_jsxDEV","Main","_ref","_s","activeNote","onUpdateNote","onDeleteNote","formatDate","quill","onSaveNote","field","value","Object","assign","lastModified","Date","now","onEditField","newNote","getCurrentDateTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","timezoneOffset","getTimezoneOffset","timezoneOffsetFormatted","datetime","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","title","onChange","e","target","autoFocus","onClick","current","getEditor","getText","toISOString","slice","newDate","timestamp","getTime","ref","theme","body","_c","$RefreshReg$"],"sources":["/home/daniel/Documents/GitHub/assignment-06-lotion-DanielMellen-University/src/Mainbar.js"],"sourcesContent":["import {useRef, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\n\r\nconst Main = ({ activeNote, onUpdateNote, onDeleteNote, formatDate }) => {\r\n  const quill = useRef();\r\n\r\n\r\n  function onSaveNote (field, value) {\r\n    onUpdateNote(\r\n      Object.assign(\r\n        {}, \r\n        activeNote,\r\n        {[field]: value, lastModified: Date.now()}\r\n      )\r\n    );\r\n  }\r\n  \r\n\r\n  function onEditField(field, value) {\r\n    const newNote = Object.assign({}, activeNote, {[field]: value, lastModified: Date.now()});\r\n    onUpdateNote(newNote);\r\n  }\r\n  \r\n  //Get the current time from web browser\r\n  function getCurrentDateTime() {\r\n\r\n    const now = new Date();\r\n\r\n    const year = now.getFullYear();\r\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(now.getDate()).padStart(2, \"0\");\r\n    const hours = String(now.getHours()).padStart(2, \"0\");\r\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\r\n\r\n    const timezoneOffset = now.getTimezoneOffset() / -60;\r\n    const timezoneOffsetFormatted = String(timezoneOffset).padStart(2, \"0\");\r\n    const datetime = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}-${timezoneOffsetFormatted}:00`;\r\n    return datetime;\r\n  }\r\n  //Debug\r\n  console.log(getCurrentDateTime());\r\n\r\n\r\n  if (!activeNote)\r\n    return (\r\n      <div className=\"no-active-note\">Select an existing note or create a new one </div>\r\n    );\r\n\r\n\r\n  return (\r\n    <div className=\"app-main\">\r\n      <div className=\"app-main-note-edit\">\r\n        <div id=\"mainbar-header\">\r\n          <h1 id=\"mainbar-title\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"mainbar-title-input\"\r\n              value={activeNote.title}\r\n              onChange={(e) => {\r\n                onEditField(\"title\", e.target.value);\r\n              }}\r\n              autoFocus\r\n            />\r\n          </h1>\r\n          <div id=\"mainbar-buttons\">\r\n            <button\r\n              id=\"save_button\"\r\n              onClick={() =>\r\n                onSaveNote(\"body\", quill.current.getEditor().getText())\r\n              }\r\n            >\r\n              save\r\n            </button>\r\n            <button\r\n              id=\"delete_button\"\r\n              onClick={(e) => onDeleteNote(activeNote.id)}\r\n            >\r\n              delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div id=\"date\">\r\n          <input\r\n            type=\"datetime-local\"\r\n            id=\"date\"\r\n            value={new Date(activeNote.lastModified).toISOString().slice(0, -8)}\r\n            onChange={(e) => {\r\n              const newDate = new Date(e.target.value);\r\n              const timestamp = newDate.getTime();\r\n              onEditField(\"lastModified\", timestamp);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div id=\"mainbar-content\">\r\n          <ReactQuill ref={quill} theme=\"snow\" value={activeNote.body} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Main;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}